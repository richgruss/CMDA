age <- c(1,2,3,4,5,6,7,8)
weight <- c(5,6,7,2,3,4,9,8)
mean(weight)
mean(age)
cor(age,weight)
plot(age,weight)
weight <- c(12,16,19,32,55,100,200,600)
plot(age,weight)
cor(age,weight)
help.start()
cwd
pwd
library(Hmisc)
setwd('/Users/rgruss/git/CMDA')
mydata <- spss.get("Nov12 Gender and Generations_cleaned.sav", use.value.labels=TRUE)
Nov12.Gender.and.Generations_cleaned <- read.table("~/git/CMDA/Nov12 Gender and Generations_cleaned.sav", quote="\"")
View(Nov12.Gender.and.Generations_cleaned)
#library(Hmisc)
setwd('/Users/rgruss/git/CMDA')
#mydata <- spss.get("Nov12 Gender and Generations_cleaned.sav", use.value.labels=TRUE)
load('phsample.RData')
View(dhus)
psub = subset(dpus, with (dpus,
(PINCP > 1000) &
(ESR == 1) &
(PINCP <= 250000) &
(PERNP > 1000) &
(PERNP <= 250000) &
(WKHP >= 40) &
(AGEP >= 20) & (AGEP <= 50) &
(PWGTP1 > 0) & (COW %in% (1:7)) & (SCHL %in% (1:24))
))
View(psub)
ggplot(custdata) +
geom_bar(aes(x=state.of.res), fill = "blue") +
coord_flip() +
theme(axis.text.y = element_text(size = rel(0.7))) +
theme_bw()+
ggtitle("Horizontal Bar Chart")
?theme
ggplot(custdata) +
geom_bar(aes(x=state.of.res), fill = "blue") +
coord_flip() +
theme(axis.text.y = element_text(size = rel(0.7))) +
theme_bw()+
ggtitle("Horizontal Bar Chart")
#Build the horizontal bar chart with the new data
ggplot(statef) +
geom_bar(aes(x=state.of.res,y=count),
stat = "identity",
fill = "blue")+
coord_flip() +
theme(axis.text.y = element_text(size=rel(0.6))) +
theme_bw() +
ggtitle ("Horizontal bar chart with ordered categories")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ggplot(statef) +
geom_bar(aes(x=state.of.res,y=count),
stat = "identity",
fill = "blue")+
coord_flip() +
theme(axis.text.y = element_text(size=rel(0.6))) +
theme_bw() +
ggtitle ("Horizontal bar chart with ordered categories")
#Sort states in the descending order of counts of observations
statef <- transform(statef, state.of.res=reorder(state.of.res,count))
#Build the horizontal bar chart with the new data
ggplot(statef) +
geom_bar(aes(x=state.of.res,y=count),
stat = "identity",
fill = "blue")+
coord_flip() +
theme(axis.text.y = element_text(size=rel(0.6))) +
theme_bw() +
ggtitle ("Horizontal bar chart with ordered categories")
#Lecture 8
getwd()
setwd('/Users/rgruss/git/CMDA')
#The health insurance customer data
load('exampleData.rData')
#Examine data
names(custdata)
dim(custdata)
class(custdata)
#Summary statistics
summary(custdata) #for the entire data frame
#Visualizations
#We will use a new R package that we need to install
install.packages("ggplot2")
library(ggplot2)
help(package=ggplot2) #all functions in the package
#the + is function chaining; each term is a "layer"
#Histograms
ggplot(custdata) +
geom_histogram(aes(x=age),
binwidth = 5)+
theme_bw() #to make background white
#Density plots
ggplot(custdata) +
geom_density(aes(x=income)) +
theme_bw() +
ggtitle("Density plot")
#Bar charts for factor variables
#Visualize the marital status variable
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "green") +
theme_bw() +
ggtitle("Vertical Bar Chart")
#Horizontal bar chart for many categories
ggplot(custdata) +
geom_bar(aes(x=state.of.res), fill = "blue") +
coord_flip() +
theme(axis.text.y = element_text(size = rel(0.7))) +
theme_bw()+
ggtitle("Horizontal Bar Chart")
?theme
#Bar chart with categories sorted in order of bar length (frequency)
#Steps:
#first create a table with frequencies for each category;
#this is a table with numerical summaries
statesums <- table(custdata$state.of.res)
#make it into a data frame
statef <- as.data.frame(statesums)
statef
install.packages("ggplot2")
#Build the horizontal bar chart with the new data
ggplot(statef) +
geom_bar(aes(x=state.of.res,y=count),
stat = "identity",
fill = "blue")+
coord_flip() +
theme(axis.text.y = element_text(size=rel(0.6))) +
theme_bw() +
ggtitle ("Horizontal bar chart with ordered categories")
names(custdata)
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "green") +
theme_bw() +
ggtitle("Vertical Bar Chart")
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "blue") +
theme_bw() +
ggtitle("Vertical Bar Chart")
geom_bar(aes(x=marital.stat), fill = "purple") +
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "orange") +
theme_bw() +
ggtitle("Vertical Bar Chart")
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "green") +
theme_bw() +
ggtitle("Vertical Bar Chart")
geom_bar(aes(x=marital.stat), fill = "red") +
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "red") +
theme_bw() +
ggtitle("Vertical Bar Chart")
ggplot(custdata) +
geom_bar(aes(x=marital.stat), fill = "green") +
theme_bw() +
ggtitle("Vertical Bar Chart")
ggplot(custdata) +
geom_bar(aes(x=state.of.res), fill = "blue") +
coord_flip() +
theme(axis.text.y = element_text(size = rel(0.7))) +
theme_bw()+
ggtitle("Horizontal Bar Chart")
statesums <- table(custdata$state.of.res)
statesums
statef <- as.data.frame(statesums)
statef
#give better names to the variables in the statef data frame
colnames(statef) <- c("state.of.res", "count")
head(statef)
#Sort states in the descending order of counts of observations
statef <- transform(statef, state.of.res=reorder(state.of.res,count))
#Build the horizontal bar chart with the new data
ggplot(statef) +
geom_bar(aes(x=state.of.res,y=count),
stat = "identity",
fill = "blue")+
coord_flip() +
theme(axis.text.y = element_text(size=rel(0.6))) +
theme_bw() +
ggtitle ("Horizontal bar chart with ordered categories")
getwd()
setwd('/Users/rgruss/git/CMDA')
#The health insurance customer data
load('exampleData.rData')
#Examine data
names(custdata)
dim(custdata)
library(ggplot2)
custdata2 <- subset(custdata,
(custdata$age > 0 & custdata$age < 100
& custdata$income > 0))
cor(custdata2$age, custdata2$income) #weak negative relationship
ggplot(custdata2, aes(x=age,y=income)) +
geom_point() +
ylim(0,200000) +
theme_bw() +
ggtitle("Scatterplot of Income vs Age")
?geom_point
names(custdata2)
ggplot(custdata2, aes(x=age,y=income)) +
geom_point(aes(colour = marital.stat )) +
ylim(0,200000) +
theme_bw() +
ggtitle("Scatterplot of Income vs Age")
ggplot(custdata2, aes(x=age,y=income)) +
geom_point() +
stat_smooth(method = "lm")+
ylim(0,200000) +
theme_bw() +
ggtitle("Scatterplot of Income vs Age") #not a very good fit
ggplot(custdata2, aes(x=age,y=income)) +
ylim(0,200000) +
geom_point() +
geom_smooth()+
ggtitle("Scatterplot of Income vs Age") +
theme_bw()
ggplot(custdata) +
geom_bar(aes(x=marital.stat, fill=health.ins))+
theme_bw()+
ggtitle("How many people are insured per marital status")
ggplot(custdata) + geom_bar(aes(x=marital.stat,
fill=health.ins),
position="dodge") +
theme_bw()+
ggtitle("How many people are insured per marital status")
ggplot(custdata) + geom_bar(aes(x=marital.stat,
fill=health.ins),
position="fill") +
ggplot(custdata, aes(x=marital.stat)) +
geom_bar(aes(fill=health.ins), position="fill") +
geom_point(aes(y=-0.05), size=0.75, alpha=0.3,
position=position_jitter(h=0.01)) +
theme_bw()+
ggtitle("Compare percentages of people uninsured per marital category
and how popular each marital category is")
ggplot(custdata) + geom_bar(aes(x=marital.stat,
fill=health.ins),
position="fill") +
theme_bw()+
ggtitle("Compare percentages of people uninsured per marital category")
ggplot(custdata) + geom_bar(aes(x=marital.stat,
fill=health.ins),
position="dodge") +
theme_bw()+
ggtitle("How many people are insured per marital status")
ggplot(custdata2) +
geom_bar(aes(x=marital.stat), position="dodge",
fill="darkgray") +
facet_wrap(~housing.type, scales="free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#first try side-by-side
ggplot(custdata2) +
geom_bar(aes(x=housing.type, fill=marital.stat ),
position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
ggplot(custdata, aes(x=marital.stat)) +
geom_bar(aes(fill=health.ins), position="fill") +
geom_point(aes(y=-0.05), size=0.75, alpha=0.3,
position=position_jitter(h=0.01)) +
theme_bw()+
ggtitle("Compare percentages of people uninsured per marital category
and how popular each marital category is")
ggplot(custdata2) +
geom_bar(aes(x=marital.stat), position="dodge",
fill="darkgray") +
facet_wrap(~housing.type, scales="free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(custdata2) +
geom_bar(aes(x=housing.type, fill=marital.stat ),
position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
ggplot(custdata2) +
geom_bar(aes(x=marital.stat), position="dodge",
fill="darkgray") +
facet_wrap(~housing.type, scales="free_y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
