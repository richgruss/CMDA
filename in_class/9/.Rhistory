age <- c(1,2,3,4,5,6,7,8)
weight <- c(5,6,7,2,3,4,9,8)
mean(weight)
mean(age)
cor(age,weight)
plot(age,weight)
weight <- c(12,16,19,32,55,100,200,600)
plot(age,weight)
cor(age,weight)
help.start()
cwd
pwd
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("NatalRiskData.rData")
train <- sdata[sdata$ORIGRANDGROUP <= 5,]
test <- sdata[sdata$ORIGRANDGROUP > 5,]
complications <- c("ULD_MECO", "ULD_PRECIP", "ULD_BREECH")
riskfactors <- c("URF_DIAB", "URF_CHYPER", "URF_PHYPER", "URF_ECLAM")
y <- "atRisk"
x <- c("PWGT",
"UPREVIS",
"CIG_REC",
"GESTREC3",
"DPLURAL",
complications,
riskfactors
)
fmla <- paste(y, paste(x, collapse="+"), sep="~")
model <- glm(fmla, data=train, family=binomial(link="logit"))
train$pred <- predict(model, newdata = train, type = "response")
head(train$pred)
head(train$atRisk)
library(ggplot2)
#distribution of prediction scores by the original
#value of y, 0 or 1 (false or true)
ggplot(train, aes(x=pred, color=factor(atRisk), linetype=factor(atRisk))) +  geom_density()
#Web Interactive Data Science with Shiny
#http://shiny.rstudio.com/gallery/
setwd('/Users/rgruss/git/CMDA/in_class/9')
install.packages("shiny")
library(shiny)
#have your ui.R and server.R files in the "App-1" folder
#in your working directory
#Save this Shiny.R file in the working directory
#Run your app by:
runApp("App.2")
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
attach(final)
model <- glm(ssc ~ som1 + som2 + som3 + som4 + som5, family=binomial(link="logit"))
summary(model)
#all of som1-5 appear to all be significant
#som1         0.25529    0.07962   3.206  0.00148 **
#Interpretation: log-odds (p/(1-p) ???
model2 <- glm(ssc ~ som6 + som7 + som8 + som9, family=binomial(link="logit"))
summary(model)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
attach(final)
model <- glm(ssc ~ som1 + som2 + som3 + som4 + som5, family=binomial(link="logit"))
summary(model)
#all of som1-5 appear to all be significant
#som1         0.25529    0.07962   3.206  0.00148 **
#Interpretation: log-odds (p/(1-p) ???
model2 <- glm(ssc ~ som6 + som7 + som8 + som9, family=binomial(link="logit"))
summary(model)
summary(model2)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
attach(final)
model <- glm(ssc ~ som1 + som2 + som3 + som4 + som5, family=binomial(link="logit"))
summary(ssc)
final$ssc <- as.factor(final$ssc)
model <- glm(ssc ~ som1 + som2 + som3 + som4 + som5, family=binomial(link="logit"))
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
attach(final)
model <- glm(ssc ~ som1 + som2 + som3 + som4 + som5, family=binomial)
model <- glm(disorder ~ som1 + som2 + som3 + som4 + som5, family=binomial)
summary(model)
model <- glm(disorder ~ som6 + som7 + som8 + som8 + som9, family=binomial)
summary(model)
model <- glm(disorder ~ som10 + som11 + som12 + som13 + som14, family=binomial)
summary(model)
model <- glm(disorder ~ som6 + som7 + som8 + som8 + som9, family=binomial)
summary(model)
model <- glm(disorder ~ som1 + som2 + som3 + som4 + som5, family=binomial)
summary(model)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
attach(final)
train_size <- floor(0.90 * nrow(final))
set.seed(123)
train_ind <- sample(seq_len(nrow(final)), size = train_size)
train <- final[train_ind, ]
test <- final[-train_ind, ]
View(final)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
attach(final)
# 90% training size
train_size <- floor(0.90 * nrow(final))
set.seed(123)
train_ind <- sample(seq_len(nrow(final)), size = train_size)
train <- final[train_ind, ]
test <- final[-train_ind, ]
full_model <- lm(ssc ~ age + gender + location + ethnicity + coder)
summary(full_model)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
load(MASS)
library(MASS)
step <- stepAIC(full_model, direction = "both")
summary(step)
step$anova
reduced_model <- lm(ssc ~ age + location + ethnicity)
summary(reduced_model)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
# 90% training size
train_size <- floor(0.90 * nrow(final))
set.seed(123)
train_ind <- sample(seq_len(nrow(final)), size = train_size)
train <- final[train_ind, ]
test <- final[-train_ind, ]
full_model <- lm(train$ssc ~ train$age + train$gender + train$location
+ train$ethnicity + train$coder)
summary(full_model)
library(MASS)
step <- stepAIC(full_model, direction = "both")
summary(step)
step$anova
reduced_model <- lm(train$ssc ~ train$age + train$location + train$ethnicity)
summary(reduced_model)
test$sscpred <- predict(reduced_model, newdata = test)
wft <- predict(reduced_model, newdata = test)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
# 90% training size
train_size <- floor(0.90 * nrow(final))
set.seed(123)
train_ind <- sample(seq_len(nrow(final)), size = train_size)
train <- final[train_ind, ]
test <- final[-train_ind, ]
full_model <- lm(train$ssc ~ train$age + train$gender + train$location
+ train$ethnicity + train$coder)
summary(full_model)
library(MASS)
step <- stepAIC(full_model, direction = "both")
summary(step)
step$anova
#coder and gender were dropped
reduced_model <- lm(train$ssc ~ train$age + train$location + train$ethnicity)
summary(reduced_model)
print(test)
test$wtf <- "wtf?"
test$thepred <- predict(reduced_model, newdata = test)
summary(reduced_model)
#reduced model dropped coder and gender
reduced_test <- subset(test, select = c('age', 'location', 'ethnicity'))
reduced_test$prediction <- predict(reduced_model, newdata = reduced_test)
reduced_test$prediction <- predict(reduced_model, newdata = reduced_test,
na.action = na.omit)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
# 90% training size
train_size <- floor(0.90 * nrow(final))
set.seed(123)
train_ind <- sample(seq_len(nrow(final)), size = train_size)
train <- final[train_ind, ]
test <- final[-train_ind, ]
full_model <- lm(ssc ~ age + gender + location
+ ethnicity + coder, data=train)
summary(full_model)
library(MASS)
step <- stepAIC(full_model, direction = "both")
summary(step)
step$anova
reduced_model <- lm(ssc ~ age + location + ethnicity, data=train)
summary(reduced_model)
test$sscpred <- predict(reduced_model, newdata = test)
library(ggplot2)
ggplot(data = test, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = sscpred, y = ssc), color = "blue")
library(ggplot2)
ggplot(data = test, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = casual, y = casual), color = "blue")
library(ggplot2)
ggplot(data = test, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")
library(ggplot2)
ggplot(data = test, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = ssc, y = ssc),
color = "blue")
View(test)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("fdata.RData")
# 90% training size
train_size <- floor(0.90 * nrow(final))
set.seed(123)
train_ind <- sample(seq_len(nrow(final)), size = train_size)
train <- final[train_ind, ]
test <- final[-train_ind, ]
full_model <- lm(ssc ~ age + gender + location
+ ethnicity + coder, data=train)
summary(full_model)
library(MASS)
step <- stepAIC(full_model, direction = "both")
summary(step)
step$anova
reduced_model <- lm(ssc ~ age + location + ethnicity, data=train)
summary(reduced_model)
test$sscpred <- predict(reduced_model, newdata = test)
library(ggplot2)
ggplot(data = test, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = ssc, y = ssc),
color = "blue")
print(test$ssc, test$sscpred)
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("NatalRiskData.rData")
train <- sdata[sdata$ORIGRANDGROUP <= 5,]
test <- sdata[sdata$ORIGRANDGROUP > 5,]
complications <- c("ULD_MECO", "ULD_PRECIP", "ULD_BREECH")
riskfactors <- c("URF_DIAB", "URF_CHYPER", "URF_PHYPER", "URF_ECLAM")
y <- "atRisk"
x <- c("PWGT",
"UPREVIS",
"CIG_REC",
"GESTREC3",
"DPLURAL",
complications,
riskfactors
)
fmla <- paste(y, paste(x, collapse="+"), sep="~")
model <- glm(fmla, data=train, family=binomial(link="logit"))
train$pred <- predict(model, newdata = train, type = "response")
head(train$pred)
head(train$atRisk)
library(ggplot2)
#distribution of prediction scores by the original
#value of y, 0 or 1 (false or true)
ggplot(train, aes(x=pred, color=factor(atRisk), linetype=factor(atRisk))) +  geom_density()
#Web Interactive Data Science with Shiny
#http://shiny.rstudio.com/gallery/
setwd('/Users/rgruss/git/CMDA/in_class/9')
install.packages("shiny")
library(shiny)
#have your ui.R and server.R files in the "App-1" folder
#in your working directory
#Save this Shiny.R file in the working directory
#Run your app by:
runApp("App.2")
head(test[,c('pred','atRisk')])
test$pred <- predict(model, newdata = test, type = "response")
head(test$pred)
head(test$atRisk)
library(ggplot2)
#distribution of prediction scores by the original
#value of y, 0 or 1 (false or true)
ggplot(test, aes(x=pred, color=factor(atRisk), linetype=factor(atRisk))) +  geom_density()
head(test[,c('pred','atRisk')])
runApp("App.2")
#have your ui.R and server.R files in the "App-1" folder
runApp("App.2")
setwd('/Users/rgruss/git/CMDA/in_class/9')
load("NatalRiskData.rData")
train <- sdata[sdata$ORIGRANDGROUP <= 5,]
test <- sdata[sdata$ORIGRANDGROUP > 5,]
complications <- c("ULD_MECO", "ULD_PRECIP", "ULD_BREECH")
riskfactors <- c("URF_DIAB", "URF_CHYPER", "URF_PHYPER", "URF_ECLAM")
y <- "atRisk"
x <- c("PWGT",
"UPREVIS",
"CIG_REC",
"GESTREC3",
"DPLURAL",
complications,
riskfactors
)
fmla <- paste(y, paste(x, collapse="+"), sep="~")
model <- glm(fmla, data=train, family=binomial(link="logit"))
test$pred <- predict(model, newdata = test, type = "response")
head(test$pred)
head(test$atRisk)
library(ggplot2)
#distribution of prediction scores by the original
#value of y, 0 or 1 (false or true)
ggplot(test, aes(x=pred, color=factor(atRisk), linetype=factor(atRisk))) +  geom_density()
#Web Interactive Data Science with Shiny
#http://shiny.rstudio.com/gallery/
setwd('/Users/rgruss/git/CMDA/in_class/9')
install.packages("shiny")
library(shiny)
#have your ui.R and server.R files in the "App-1" folder
#in your working directory
#Save this Shiny.R file in the working directory
#Run your app by:
runApp("App.2")
